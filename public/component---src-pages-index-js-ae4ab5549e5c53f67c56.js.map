{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/parts.js"],"names":["IndexPage","filterLocation","event","city","target","value","window","location","hash","render","data","this","props","console","log","posts","allMarkdownRemark","edges","meta","name","site","siteMetadata","title","description","slug","siteUrl","speakersList","map","speaker","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Speaker","speakerProfile","key","node","id","_components_layout__WEBPACK_IMPORTED_MODULE_7__","className","htmlFor","onChange","React","Component","_ref","details","frontmatter","tagline","socialLinks","socials","profile","featured","socialTitle","_components_parts__WEBPACK_IMPORTED_MODULE_8__","platform","url","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","fields","src","profileImage","alt","propTypes","PropTypes","shape","array","pageQuery","m","module","exports","require","default","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Socials","icon","linkTitle","charAt","toUpperCase","slice","react__WEBPACK_IMPORTED_MODULE_2___default","react_feather__WEBPACK_IMPORTED_MODULE_3__","Github","includes","href"],"mappings":"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","file":"component---src-pages-index-js-ae4ab5549e5c53f67c56.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { kebabCase } from 'lodash'\r\nimport { graphql, Link } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport {Socials} from '../components/parts'\r\n\r\nimport '../scss/home.scss';\r\n\r\nconst locations = {\r\n    brisbane: 'Brisbane, Queensland',\r\n    melbourne: 'Melbourne, Victoria',\r\n    perth: 'Perth, Western Australia',\r\n    sydney: 'Sydney, New South Wales',\r\n};\r\n\r\nexport default class IndexPage extends React.Component {\r\n    filterLocation(event) {\r\n\t\tlet city = event.target.value;\r\n\r\n\t\tif(city != '') {\r\n\t\t\twindow.location.hash = \"#\" + city;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twindow.location.hash = '';\r\n\t\t}\r\n    }\r\n    \r\n    render() {        \r\n        const { data } = this.props\r\n\r\n        console.log(this.props);\r\n\r\n        const { edges: posts } = data.allMarkdownRemark\r\n\r\n        const meta = {\r\n            name: data.site.siteMetadata.title,\r\n            description: data.site.siteMetadata.description,\r\n            slug: data.site.siteMetadata.siteUrl,\r\n        };\r\n\r\n        let speakersList = posts.map((speaker) => (\r\n\t\t\t<Speaker speakerProfile={speaker} key={speaker.node.id} />\r\n\t\t));\r\n\r\n        return (\r\n            <Layout meta={meta}>\r\n               <div className=\"filter\">\r\n\t\t\t\t\t<label htmlFor=\"locations\">Filter by Location</label>\r\n\t\t\t\t\t<select id=\"locations\" onChange={this.filterLocation}>\r\n\t\t\t\t\t\t<option value=\"\">Filter by Location</option>\r\n\t\t\t\t\t\t{/* {cities} */}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"speakers-list\">\r\n\t\t\t\t\t{speakersList}\r\n\t\t\t\t</div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst Speaker = ({speakerProfile}) => {\r\n    let details = speakerProfile.node.frontmatter,\r\n\t\ttagline = (<p className=\"tagline\">{details.tagline}</p>);\r\n\r\n    let socialLinks = details.socials.map((profile) => {\r\n        if(profile.featured) {\r\n            if(profile.socialTitle) {\r\n                return (\r\n                    <Socials platform={profile.platform} url={profile.url} key={profile.url} socialTitle={profile.socialTitle} />\r\n                );\r\n            }\r\n            else {\r\n                return (\r\n                    <Socials platform={profile.platform} url={profile.url} key={profile.url} />\r\n                );\r\n            }\r\n        }\r\n    })\r\n\r\n\treturn (\r\n\t\t<Link to={speakerProfile.node.fields.slug} className=\"speaker\">\r\n\t\t\t<img src={details.profileImage} alt={'Speaker Profile Photo of ' + details.title} />\r\n\t\t\t<h2>{details.name}</h2>\r\n\t\t\t{tagline}\r\n\t\t\t<div className=\"socials\">\r\n\t\t\t\t{socialLinks}\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nIndexPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            edges: PropTypes.array,\r\n        }),\r\n    }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n    query IndexQuery {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                siteUrl\r\n            }\r\n        }\r\n        allMarkdownRemark(\r\n            sort: { order: ASC, fields: [frontmatter___title] }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        title\r\n                        tagline\r\n                        profileImage\r\n                        socials {\r\n                            featured\r\n                            platform\r\n                            socialTitle\r\n                            url\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\n\r\nimport {BookOpen, Codepen, Facebook, Github, Gitlab, Globe, Instagram, Linkedin, Link2, Twitter, Youtube} from 'react-feather';\r\n\r\nexport const Socials = ({platform, socialTitle, url}) => {\r\n\tlet icon,\r\n        linkTitle = platform.charAt(0).toUpperCase() + platform.slice(1) + ' profile';\r\n\t\r\n\tswitch (platform) {\r\n\t\tcase 'blog':\r\n\t\t\ticon = <BookOpen /> ;\r\n\t\t\tbreak;\r\n\t\tcase 'codepen':\r\n\t\t\ticon = <Codepen />\r\n\t\t\tbreak;\r\n\t\tcase 'facebook':\r\n\t\t\ticon = <Facebook />;\r\n\t\t\tbreak;\r\n\t\tcase 'github':\r\n\t\t\ticon = Github;\r\n\t\t\tbreak;\r\n\t\tcase 'Gitlab':\r\n\t\t\ticon = <Gitlab />\r\n\t\t\tbreak;\r\n\t\tcase 'instagram':\r\n\t\t\ticon = <Instagram />;\r\n\t\t\tbreak;\r\n\t\tcase 'linkedin':\r\n\t\t\ticon = <Linkedin />;\r\n\t\t\tbreak;\r\n\t\tcase 'twitter':\r\n\t\t\ticon = <Twitter />;\r\n\t\t\tbreak;\r\n\t\tcase 'website':\r\n\t\t\ticon = <Globe />;\r\n\t\t\tbreak;\r\n\t\tcase 'youtube':\r\n\t\t\ticon = <Youtube />;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ticon = <Link2 />;\r\n\t}\r\n\r\n\tif(socialTitle) {\r\n\t\tlinkTitle = socialTitle;\r\n\t} \r\n\telse if(platform.includes('website')) {\r\n\t\tlinkTitle = 'website';\r\n\t}\r\n\telse if(platform.includes('blog')) {\r\n\t\tlinkTitle = 'blog';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<a href={url} className=\"social-link\" target=\"_blank\" title={'Link to ' + linkTitle}>\r\n\t\t\t{icon}\r\n\t\t</a>\r\n\t);\r\n};"],"sourceRoot":""}